name: Build Android Kernel 5.15

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Initialize Variables
      run: |
        GKI_ROOT=$(pwd)
        if test -d "$GKI_ROOT/common/drivers"; then
          DRIVER_DIR="$GKI_ROOT/common/drivers"
        elif test -d "$GKI_ROOT/drivers"; then
          DRIVER_DIR="$GKI_ROOT/drivers"
        else
          echo '[ERROR] "drivers/" directory not found.'
          exit 127
        fi
        DRIVER_MAKEFILE=$DRIVER_DIR/Makefile
        DRIVER_KCONFIG=$DRIVER_DIR/Kconfig

    - name: Setup KernelSU
      run: |
        echo "[+] Setting up KernelSU..."
        test -d "$GKI_ROOT/KernelSU" || git clone https://github.com/tiann/KernelSU && echo "[+] Repository cloned."
        cd "$GKI_ROOT/KernelSU"
        git stash && echo "[-] Stashed current changes."
        if [ "$(git status | grep -Po 'v\d+(\.\d+)*' | head -n1)" ]; then
          git checkout main && echo "[-] Switched to main branch."
        fi
        git pull && echo "[+] Repository updated."
        if [ -z "${{ github.event.inputs.commit-or-tag- }}" ]; then
          git checkout "$(git describe --abbrev=0 --tags)" && echo "[-] Checked out latest tag."
        else
          git checkout "${{ github.event.inputs.commit-or-tag }}" && echo "[-] Checked out ${{ github.event.inputs.commit-or-tag }}." || echo "[-] Checkout default branch"
        fi
        cd "$DRIVER_DIR"
        ln -sf "$(realpath --relative-to="$DRIVER_DIR" "$GKI_ROOT/KernelSU/kernel")" "kernelsu" && echo "[+] Symlink created."

        # Add entries in Makefile and Kconfig if not already existing
        grep -q "kernelsu" "$DRIVER_MAKEFILE" || printf "\nobj-\$(CONFIG_KSU) += kernelsu/\n" >> "$DRIVER_MAKEFILE" && echo "[+] Modified Makefile."
        grep -q "source \"drivers/kernelsu/Kconfig\"" "$DRIVER_KCONFIG" || sed -i "/endmenu/i\source \"drivers/kernelsu/Kconfig\"" "$DRIVER_KCONFIG" && echo "[+] Modified Kconfig."
        echo '[+] Done.'

    - name: Build Kernel
      run: |
        # 这里添加你的编译命令
        make -j$(nproc) ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- O=out
